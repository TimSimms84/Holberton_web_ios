// variable_sets/mod.rs

// Import the `phf_set` macro from the `phf` crate
use phf::phf_set;

// The following line includes the contents of the file generated by the `build.rs` script.
// The `build.rs` script queries the SQLite database for variable symbols and their types,
// sorts them into different categories (float, int, and char), and writes them into
// separate `phf::Set`s in a file named "variable_sets.rs" in the build output directory.
// This file is included here at compile-time, so the contents of the generated file
// become part of this module.
include!(concat!(env!("OUT_DIR"), "/variable_sets.rs"));

// Now this module contains three public `phf::Set`s, `FLOAT_VARIABLES`, `INT_VARIABLES`,
// and `CHAR_VARIABLES`, each containing the respective variable symbols from the SQLite
// database. These sets can be used in the rest of the Rust project to efficiently check
// if a given variable symbol belongs to a specific category.
